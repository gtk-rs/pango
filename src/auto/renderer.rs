// This file was generated by gir (add4ad6) from gir-files (0bcaef9)
// DO NOT EDIT

use Layout;
use LayoutLine;
use ffi;
use glib::object::IsA;
use glib::translate::*;

glib_wrapper! {
    pub struct Renderer(Object<ffi::PangoRenderer>);

    match fn {
        get_type => || ffi::pango_renderer_get_type(),
    }
}

pub trait RendererExt {
    fn activate(&self);

    fn deactivate(&self);

    fn draw_error_underline(&self, x: i32, y: i32, width: i32, height: i32);

    //fn draw_glyph(&self, font: /*Ignored*/&Font, glyph: Glyph, x: f64, y: f64);

    //fn draw_glyph_item<'a, P: Into<Option<&'a str>>>(&self, text: P, glyph_item: /*Ignored*/&mut GlyphItem, x: i32, y: i32);

    //fn draw_glyphs(&self, font: /*Ignored*/&Font, glyphs: /*Ignored*/&mut GlyphString, x: i32, y: i32);

    fn draw_layout(&self, layout: &Layout, x: i32, y: i32);

    fn draw_layout_line(&self, line: &LayoutLine, x: i32, y: i32);

    //fn draw_rectangle(&self, part: /*Ignored*/RenderPart, x: i32, y: i32, width: i32, height: i32);

    //fn draw_trapezoid(&self, part: /*Ignored*/RenderPart, y1_: f64, x11: f64, x21: f64, y2: f64, x12: f64, x22: f64);

    //#[cfg(feature = "v1_38")]
    //fn get_alpha(&self, part: /*Ignored*/RenderPart) -> u16;

    //fn get_color(&self, part: /*Ignored*/RenderPart) -> /*Ignored*/Option<Color>;

    fn get_layout(&self) -> Option<Layout>;

    fn get_layout_line(&self) -> Option<LayoutLine>;

    //fn get_matrix(&self) -> /*Ignored*/Option<Matrix>;

    //fn part_changed(&self, part: /*Ignored*/RenderPart);

    //#[cfg(feature = "v1_38")]
    //fn set_alpha(&self, part: /*Ignored*/RenderPart, alpha: u16);

    //fn set_color<'a, P: Into<Option<&'a /*Ignored*/Color>>>(&self, part: /*Ignored*/RenderPart, color: P);

    //fn set_matrix<'a, P: Into<Option<&'a /*Ignored*/Matrix>>>(&self, matrix: P);
}

impl<O: IsA<Renderer>> RendererExt for O {
    fn activate(&self) {
        unsafe {
            ffi::pango_renderer_activate(self.to_glib_none().0);
        }
    }

    fn deactivate(&self) {
        unsafe {
            ffi::pango_renderer_deactivate(self.to_glib_none().0);
        }
    }

    fn draw_error_underline(&self, x: i32, y: i32, width: i32, height: i32) {
        unsafe {
            ffi::pango_renderer_draw_error_underline(self.to_glib_none().0, x, y, width, height);
        }
    }

    //fn draw_glyph(&self, font: /*Ignored*/&Font, glyph: Glyph, x: f64, y: f64) {
    //    unsafe { TODO: call ffi::pango_renderer_draw_glyph() }
    //}

    //fn draw_glyph_item<'a, P: Into<Option<&'a str>>>(&self, text: P, glyph_item: /*Ignored*/&mut GlyphItem, x: i32, y: i32) {
    //    unsafe { TODO: call ffi::pango_renderer_draw_glyph_item() }
    //}

    //fn draw_glyphs(&self, font: /*Ignored*/&Font, glyphs: /*Ignored*/&mut GlyphString, x: i32, y: i32) {
    //    unsafe { TODO: call ffi::pango_renderer_draw_glyphs() }
    //}

    fn draw_layout(&self, layout: &Layout, x: i32, y: i32) {
        unsafe {
            ffi::pango_renderer_draw_layout(self.to_glib_none().0, layout.to_glib_none().0, x, y);
        }
    }

    fn draw_layout_line(&self, line: &LayoutLine, x: i32, y: i32) {
        unsafe {
            ffi::pango_renderer_draw_layout_line(self.to_glib_none().0, line.to_glib_none().0, x, y);
        }
    }

    //fn draw_rectangle(&self, part: /*Ignored*/RenderPart, x: i32, y: i32, width: i32, height: i32) {
    //    unsafe { TODO: call ffi::pango_renderer_draw_rectangle() }
    //}

    //fn draw_trapezoid(&self, part: /*Ignored*/RenderPart, y1_: f64, x11: f64, x21: f64, y2: f64, x12: f64, x22: f64) {
    //    unsafe { TODO: call ffi::pango_renderer_draw_trapezoid() }
    //}

    //#[cfg(feature = "v1_38")]
    //fn get_alpha(&self, part: /*Ignored*/RenderPart) -> u16 {
    //    unsafe { TODO: call ffi::pango_renderer_get_alpha() }
    //}

    //fn get_color(&self, part: /*Ignored*/RenderPart) -> /*Ignored*/Option<Color> {
    //    unsafe { TODO: call ffi::pango_renderer_get_color() }
    //}

    fn get_layout(&self) -> Option<Layout> {
        unsafe {
            from_glib_none(ffi::pango_renderer_get_layout(self.to_glib_none().0))
        }
    }

    fn get_layout_line(&self) -> Option<LayoutLine> {
        unsafe {
            from_glib_none(ffi::pango_renderer_get_layout_line(self.to_glib_none().0))
        }
    }

    //fn get_matrix(&self) -> /*Ignored*/Option<Matrix> {
    //    unsafe { TODO: call ffi::pango_renderer_get_matrix() }
    //}

    //fn part_changed(&self, part: /*Ignored*/RenderPart) {
    //    unsafe { TODO: call ffi::pango_renderer_part_changed() }
    //}

    //#[cfg(feature = "v1_38")]
    //fn set_alpha(&self, part: /*Ignored*/RenderPart, alpha: u16) {
    //    unsafe { TODO: call ffi::pango_renderer_set_alpha() }
    //}

    //fn set_color<'a, P: Into<Option<&'a /*Ignored*/Color>>>(&self, part: /*Ignored*/RenderPart, color: P) {
    //    unsafe { TODO: call ffi::pango_renderer_set_color() }
    //}

    //fn set_matrix<'a, P: Into<Option<&'a /*Ignored*/Matrix>>>(&self, matrix: P) {
    //    unsafe { TODO: call ffi::pango_renderer_set_matrix() }
    //}
}
